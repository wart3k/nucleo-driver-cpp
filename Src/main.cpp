/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */


#include "stm32f446xx_gpio_drv.h"
#include "stm32f446xx_interrupt.h"

#include "led.h"
#include "button.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

//static PinConfiguration my_gpio_button_config = {
//        .pin = GpioPinList::PIN_13,
//        .mode = GpioModeList::IRQ_FALL,
//        .speed = GpioSpeedList::FAST,
//        .pull_mode = GpioPullConfigList::PULL_UP,
//        .op_type = GpioOutputTypeConfigList::PUSH_PULL,
//        .alt_func = 0
//};

static Led my_led(GPIOB, GpioPinList::PIN_0, GpioPullConfigList::NO_PULL_UP_DOWN, GpioOutputTypeConfigList::PUSH_PULL);
static Button my_button(GPIOC, GpioPinList::PIN_13, GpioPullConfigList::PULL_UP, GpioModeList::IN);

//static GpioHandle my_gpio_button = {
//        .base_addr = GPIOC,
//        .config = my_gpio_button_config
//};

//static Gpio gpio_button(&my_gpio_button);

void delay(void) {
    for(uint32_t i = 0; i < 250000; i++);
}

//void test_function(void) {
//    gpio_button.SetIrqPrio(IRQ_EXTI15_10_NUMBER, 8);
//    gpio_button.IrqConfig(IRQ_EXTI15_10_NUMBER, true);
//}

int main(void)
{
//    test_function();
    /* Loop forever */
    for(;;) {
        if(my_button.GetButtonStatus() == ButtonStatusList::PRESSED) {
            my_led.SetStatus(LedStatusList::ON);
        } else {
            my_led.SetStatus(LedStatusList::OFF);
        }
    };
}

//extern "C" {
//    void EXTI15_10_IRQHandler(void)
//    {
//        delay();
//        gpio_button.IrqHandle();
//        my_led.ToggleStatus();
//    }
//};
